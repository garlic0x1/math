use crate::factor::*;
use std::collections::HashMap;

/// Pentagonal numbers are generated by the formula, P(n)=n(3nâˆ’1)/2.
/// The first ten pentagonal numbers are:
/// 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

pub fn pentagon(n: u32) -> u32 {
    n * (3 * n - 1) / 2
}

pub fn multiply_map(this: &mut HashMap<u64, u32>, that: &HashMap<u64, u32>) {
    for (k, v) in that.iter() {
        if let Some(v2) = this.get_mut(k) {
            *v2 += v;
        } else {
            this.insert(*k, *v);
        }
    }
}

pub fn factorial_map(n: u64) -> HashMap<u64, u32> {
    let mut map = HashMap::new();
    if n > 1 {
        map = fact_map(n);
        let map2 = factorial_map(n - 1);

        multiply_map(&mut map, &map2);
    }
    map
}

pub fn factorial(n: u32) -> u32 {
    if n == 0 {
        1
    } else {
        n * factorial(n - 1)
    }
}
